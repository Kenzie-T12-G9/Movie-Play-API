{
  "openapi": "3.0.0",
  "info": {
    "title": "Movie Play API",
    "description": "Rest API baseada nos conceitos de CRUD, que tem como objetivo o suporte a criação de uma plataforma de streaming de filmes e séries, através da seguinte `base_url`: [**http://localhost:3000**](http://localhost:3000);",
    "termsOfService": "http://localhost:3000/authors",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Users",
      "description": "Rotas relacionadas ao perfil de usuários"
    },
    {
      "name": "Login",
      "description": "Rotas relacionadas ao login de usuários e geração do token de acesso"
    },
    {
      "name": "History",
      "description": "Rotas relacionadas ao histórico de acesso do usuário"
    },
    {
      "name": "Movies",
      "description": "Rotas relacionadas a criação e leitura de filmes dentro do catálogo"
    },
    {
      "name": "Series",
      "description": "Rotas relacionadas a criação e leitura de séries dentro do catálogo"
    },
    {
      "name": "Ratings",
      "description": "Rotas relacionadas à listagem e gestão das avaliações dos títulos disponíveis"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Cadastro de um novo usuário",
        "description": "Esta rota será responsável pelo cadastro de novos usuários na aplicação. Caso sejam passados argumentos inválidos, a resposta retornada será um **400**(Bad Request).",
        "requestBody": {
          "description": "O corpo de requisição deve ser passado contendo os seguintes campos:",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createUserRequest"
              },
              "examples": {
                "Padrão": {
                  "value": {
                    "name": "Francisco Stenico",
                    "email": "francisco@teste.com",
                    "password": "1234teste",
                    "isAdm": true,
                    "paymentMethods": {
                      "name": "Francisco C Stenico",
                      "cpf": "12345678900",
                      "number": "1111222233334444",
                      "dueDate": "2026-10-21",
                      "code": "123"
                    }
                  }
                },
                "Argumentos ausentes": {
                  "value": {
                    "name": "Francisco Stenico",
                    "email": "francisco@teste.com",
                    "password": "1234teste",
                    "paymentMethods": {
                      "name": "Francisco C Stenico",
                      "cpf": "12345678900",
                      "number": "1111222233334444",
                      "dueDate": "2026-10-21",
                      "code": "123"
                    }
                  }
                },
                "Argumentos Inválidos": {
                  "value": {
                    "name": "Francisco Stenico",
                    "email": "francisco@teste.com",
                    "password": "1234teste",
                    "isAdm": true,
                    "paymentMethods": {
                      "name": "Francisco C Stenico",
                      "cpf": "12345678900",
                      "number": "1111222233334444",
                      "dueDate": "2026-10-21",
                      "code": "123"
                    },
                    "InvalidArg": null
                  }
                },
                "Cartão com a validade expirada": {
                  "value": {
                    "name": "Francisco Stenico",
                    "email": "francisco@teste.com",
                    "password": "1234teste",
                    "isAdm": true,
                    "paymentMethods": {
                      "name": "Francisco C Stenico",
                      "cpf": "12345678900",
                      "number": "1111222233334444",
                      "dueDate": "2019-08-29",
                      "code": "123"
                    }
                  }
                },
                "Método de pagamento ausente": {
                  "value": {
                    "name": "Francisco Stenico",
                    "email": "francisco@teste.com",
                    "password": "1234teste",
                    "isAdm": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**CREATED:** Usuário cadastrado!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": "1127f3f2-0057-4d67-b68a-a689c3447331",
                  "name": "Francisco Stenico",
                  "email": "francisco@teste.com",
                  "isAdm": true,
                  "paymentMethods": {
                    "id": "e0150833-89fc-436c-aa10-d2a68b0fa32f",
                    "name": "Francisco C Stenico",
                    "cpf": "12345678900",
                    "number": "1111222233334444",
                    "dueDate": "2026-10-21",
                    "code": "123"
                  },
                  "createdAt": "2022-10-22T04:31:36.398Z",
                  "updatedAt": "2022-10-22T04:31:36.398Z"
                }
              }
            }
          },
          "400": {
            "description": "**BAD REQUEST:** Erro com o corpo de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Email em uso": {
                    "value": {
                      "message": "This email is already being used"
                    }
                  },
                  "Argumentos ausentes": {
                    "value": {
                      "message": "isAdm is a required field"
                    }
                  },
                  "Argumentos inválidos": {
                    "value": {
                      "message": "this field has unspecified keys: unspecifiedArgument"
                    }
                  },
                  "Cartão com a validade expirada": {
                    "value": {
                      "message": "The payment card's due date has passed. Please try another method"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "**PAYMENT REQUIRED:** Método de pagamento ausente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Payment method is required"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Listagem de todos os usuários",
        "description": "Esta rota será responsável pela listagem de todos os usuários cadastrados na aplicação. Somente usuários admnistradores autenticados podem acessar esta rota.",
        "responses": {
          "200": {
            "description": "**OK:** Listagem de todos os usuários",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                },
                "example": [
                  {
                    "id": "f7128efb-9455-4b94-85b7-779808584786",
                    "name": "Guilherme Bernardo",
                    "email": "guilherme@teste.com",
                    "isAdm": false,
                    "paymentMethods": {
                      "id": "f8cc7ba1-61a3-49d7-9d47-b97ea100814a",
                      "name": "Guilherme B Nobrega",
                      "cpf": "98765432100",
                      "number": "4444333322221111",
                      "dueDate": "2024-11-06",
                      "code": "321"
                    },
                    "createdAt": "2022-10-22T04:31:36.398Z",
                    "updatedAt": "2022-10-23T18:42:11.521Z"
                  },
                  {
                    "id": "c4181302-b2d7-495b-bc70-ada2d110acbf",
                    "name": "Myke Macedo",
                    "email": "myke@teste.com",
                    "isAdm": true,
                    "paymentMethods": {
                      "id": "24481b74-e57a-4453-bada-eed77bc81854",
                      "name": "Myke V Macedo",
                      "cpf": "12345678900",
                      "number": "1111222233334444",
                      "dueDate": "2029-10-27",
                      "code": "123"
                    },
                    "createdAt": "2021-11-20T04:31:36.398Z",
                    "updatedAt": "2021-11-20T04:31:36.398Z"
                  },
                  {
                    "id": "f8cc7ba1-61a3-49d7-9d47-b97ea100814a",
                    "name": "Queren Hope",
                    "email": "queren@teste.com",
                    "isAdm": false,
                    "paymentMethods": {
                      "id": "c4181302-b2d7-495b-bc70-ada2d110acbf",
                      "name": "Queren Hope S Martuscelli",
                      "cpf": "15975399923",
                      "number": "9999888877776666",
                      "dueDate": "2025-12-05",
                      "code": "159"
                    },
                    "createdAt": "2019-11-27T04:31:17.322Z",
                    "updatedAt": "2020-01-11T08:32:56.398Z"
                  },
                  "..."
                ]
              }
            }
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**FORBIDDEN:**: Permissões de administrador ausentes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User is not the admin"
                }
              }
            }
          }
        }
      }
    },
    "/users/{ userId }": {
      "get": {
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Listagem de um usuário específico",
        "description": "Esta rota será responável pela listagem de um único usuário. Apenas administradores poderão fazer a listagem de usuários que não sejam o próprio usuário logado",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "[`UUID`](https://developer.mozilla.org/en-US/docs/Glossary/UUID) do usuário a ser listado",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**OK:** Listagem dos dados de um único usuário",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": "f8cc7ba1-61a3-49d7-9d47-b97ea100814a",
                  "name": "Kelven Souza",
                  "email": "kelven@teste.com",
                  "isAdm": true,
                  "paymentMethods": {
                    "id": "c4181302-b2d7-495b-bc70-ada2d110acbf",
                    "name": "Kelven S Souza",
                    "cpf": "12234456677",
                    "number": "4444555566667777",
                    "dueDate": "2028-04-25",
                    "code": "999"
                  },
                  "createdAt": "2022-01-12T14:51:27.422Z",
                  "updatedAt": "2022-11-01T08:12:59.278Z"
                }
              }
            }
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**FORBIDDEN:**: Permissões de administrador ausentes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User is not the admin"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Atualização de usuário",
        "description": "Esta rota será responsável pela atualização dos dados do usuário da aplicação. O usuário será especificado através do parâmetro `userId`, presente no endpoint da rota. Caso o usuário logado seja um administrador, será possível fazer a atualização de qualquer usuário, caso contrário apenas o perfil do usuário logado poderá ser alterado. Caso sejam passados argumentos inválidos, a resposta que será retornada será um **400**(Bad Request).",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "[`UUID`](https://developer.mozilla.org/en-US/docs/Glossary/UUID) do usuário a ser editado",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Todos os campos presentes no corpo de requisição da criação do usuário estarão disponíveis para atualização, exceto `isAdm`. Nenhum dos campos é obrigatório, permitindo assim uma atualização parcial do usuário.",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/updateUserRequest1" },
                  { "$ref": "#/components/schemas/updateUserRequest2" }
                ]
              },
              "examples": {
                "Atualização Completa": {
                  "value": {
                    "name": "Alexandre B Albuquerque",
                    "email": "alexandre@teste.com",
                    "password": "4321teste",
                    "paymentMethods": {
                      "name": "Alexandre Borges",
                      "cpf": "98765432100",
                      "number": "4444333322221111",
                      "dueDate": "2024-11-06",
                      "code": "321"
                    }
                  }
                },
                "Atualização Parcial": {
                  "value": {
                    "name": "Alexandre B Albuquerque",
                    "email": "alexandre@teste.com",
                    "password": "4321teste"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**OK:** Usuário atualizado!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": "f7128efb-9455-4b94-85b7-779808584786",
                  "name": "Alexandre Borges",
                  "email": "alexandre@teste.com",
                  "isAdm": true,
                  "paymentMethods": {
                    "id": "f8cc7ba1-61a3-49d7-9d47-b97ea100814a",
                    "name": "Alexandre B Albuquerque",
                    "cpf": "98765432100",
                    "number": "4444333322221111",
                    "dueDate": "2024-11-06",
                    "code": "321"
                  },
                  "createdAt": "2022-10-22T04:31:36.398Z",
                  "updatedAt": "2022-10-23T18:42:11.521Z"
                }
              }
            }
          },
          "400": {
            "description": "**BAD REQUEST:** Argumentos inválidos | Tentativa de atualização das permissões de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "this field has unspecified keys: isAdm"
                }
              }
            }
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**FORBIDDEN**: Permissões de administrador ausentes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User is not the admin"
                }
              }
            }
          },
          "404": {
            "description": "**NOT FOUND:** Usuário não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Deleção do perfil de um usuário",
        "description": "Esta rota será responsável pela deleção do perfil do usuário especificado por seu `id`, no parâmetro `userId`, que deve estar presente no endpoint da rota.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "[`UUID`](https://developer.mozilla.org/en-US/docs/Glossary/UUID) do usuário a ser deletado",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "**NO CONTENT:** Usuário excluído com sucesso!"
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**FORBIDDEN**: Permissões de administrador ausentes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User is not the admin"
                }
              }
            }
          },
          "404": {
            "description": "**NOT FOUND:** Usuário não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Login"],
        "summary": "Login de usuário",
        "description": "Rota responsável pelo login de usuário e fornecimento do token de autenticação no formato JWT",
        "requestBody": {
          "description": "Chaves nescessárias para a efetuação do login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "examples": {
                "Usuário existente": {
                  "value": {
                    "email": "francisco@teste.com",
                    "password": "1234teste"
                  }
                },
                "Usuário inexistente": {
                  "value": {
                    "email": "inexistente@teste.com",
                    "password": "1234teste"
                  }
                },
                "Senha incorreta": {
                  "value": {
                    "email": "francisco@teste.com",
                    "password": "senhaIncorreta!"
                  }
                },
                "Argumentos ausentes": {
                  "value": {
                    "email": "francisco@teste.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**OK:** Usuário logado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                },
                "example": {
                  "user": {
                    "id": "1127f3f2-0057-4d67-b68a-a689c3447331",
                    "name": "Francisco Stenico",
                    "email": "francisco@teste.com",
                    "isAdm": true,
                    "paymentMethods": {
                      "id": "e0150833-89fc-436c-aa10-d2a68b0fa32f",
                      "name": "Francisco C Stenico",
                      "cpf": "12345678900",
                      "number": "1111222233334444",
                      "dueDate": "2026-10-21",
                      "code": "123"
                    },
                    "createdAt": "2022-10-22T04:31:36.398Z",
                    "updatedAt": "2022-10-22T04:31:36.398Z"
                  },
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc0FkbSI6dHJ1ZSwiaWF0IjoxNjY3MzYzMzU3LCJleHAiOjE2Njc0NDk3NTcsInN1YiI6ImY4Y2M3YmExLTYxYTMtNDlkNy05ZDQ3LWI5N2VhMTAwODE0YSJ9.NuU-Vb_dsb0lrC0UeQxIx-pfy367I5hciVdRI772jUg"
                }
              }
            }
          },
          "400": {
            "description": "**BAD REQUEST:** Erro com o corpo de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Usuário inexistente | Senha incorreta": {
                    "value": {
                      "message": "Invalid email or password"
                    }
                  },
                  "Argumentos ausentes": {
                    "value": {
                      "message": "password is a required field"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/movies": {
      "post": {
        "tags": ["Movies"],
        "summary": "Adição de novos filmes",
        "description": "Rota responsável pela adição de novos filmes ao catálogo. Esta rota pode ser acessada apenas por usuários admnistradores.",
        "requestBody": {
          "description": "O corpo de requisição possui os seguintes campos como atributos obrigatórios para ser feita a requisição com sucesso:",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMovieRequest"
              },
              "examples": {
                "Padrão": {
                  "value": {
                    "name": "Django Unchained",
                    "year": 2012,
                    "duration": 165,
                    "direction": "Quentin Tarantino",
                    "description": "Django (Jamie Foxx) é um escravo liberto cujo passado brutal com seus antigos proprietários leva-o ao encontro do caçador de recompensas alemão Dr. King Schultz (Christoph Waltz). Schultz está em busca dos irmãos assassinos Brittle, e somente Django pode levá-lo a eles. O pouco ortodoxo Schultz compra Django com a promessa de libertá-lo quando tiver capturado os irmãos Brittle, vivos ou mortos."
                  }
                },
                "Argumentos ausentes": {
                  "value": {
                    "year": 2012,
                    "duration": 165,
                    "direction": "Quentin Tarantino",
                    "description": "Django (Jamie Foxx) é um escravo liberto cujo passado brutal com seus antigos proprietários leva-o ao encontro do caçador de recompensas alemão Dr. King Schultz (Christoph Waltz). Schultz está em busca dos irmãos assassinos Brittle, e somente Django pode levá-lo a eles. O pouco ortodoxo Schultz compra Django com a promessa de libertá-lo quando tiver capturado os irmãos Brittle, vivos ou mortos."
                  }
                },
                "Argumentos inválidos": {
                  "value": {
                    "InvalidArg": null,
                    "name": "Django Unchained",
                    "year": 2012,
                    "duration": 165,
                    "direction": "Quentin Tarantino",
                    "description": "Django (Jamie Foxx) é um escravo liberto cujo passado brutal com seus antigos proprietários leva-o ao encontro do caçador de recompensas alemão Dr. King Schultz (Christoph Waltz). Schultz está em busca dos irmãos assassinos Brittle, e somente Django pode levá-lo a eles. O pouco ortodoxo Schultz compra Django com a promessa de libertá-lo quando tiver capturado os irmãos Brittle, vivos ou mortos."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**CREATED**: Filme adicionado ao catálogo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMovieResponse"
                },
                "example": {
                  "id": "e0150833-89fc-436c-aa10-d2a68b0fa32f",
                  "name": "Django Unchained",
                  "year": 2012,
                  "duration": 165,
                  "direction": "Quentin Tarantino",
                  "description": "Django (Jamie Foxx) é um escravo liberto cujo passado brutal com seus antigos proprietários leva-o ao encontro do caçador de recompensas alemão Dr. King Schultz (Christoph Waltz). Schultz está em busca dos irmãos assassinos Brittle, e somente Django pode levá-lo a eles. O pouco ortodoxo Schultz compra Django com a promessa de libertá-lo quando tiver capturado os irmãos Brittle, vivos ou mortos."
                }
              }
            }
          },
          "400": {
            "description": "**BAD REQUEST:** Erro com o corpo de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Argumentos ausentes": {
                    "value": {
                      "message": "name is a required field"
                    }
                  },
                  "Argumentos inválidos": {
                    "value": {
                      "message": "this field has unspecified keys: InvalidArg"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**FORBIDDEN:**: Permissões de administrador ausentes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User is not the admin"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Movies"],
        "summary": "Listagem de todos os filmes",
        "description": "Método responsavel pela listagem de todos os filmes presentes no catálogo. Todos os usuários, administradores ou não podem acessar esta rota",
        "responses": {
          "200": {
            "description": "**OK:** Listagem de todos os filmes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoviesList"
                },
                "example": [
                  {
                    "id": "e0150833-89fc-436c-aa10-d2a68b0fa32f",
                    "name": "Django Unchained",
                    "year": 2012,
                    "duration": 165,
                    "direction": "Quentin Tarantino",
                    "description": "Django (Jamie Foxx) é um escravo liberto cujo passado brutal com seus antigos proprietários leva-o ao encontro do caçador de recompensas alemão Dr. King Schultz (Christoph Waltz). Schultz está em busca dos irmãos assassinos Brittle, e somente Django pode levá-lo a eles. O pouco ortodoxo Schultz compra Django com a promessa de libertá-lo quando tiver capturado os irmãos Brittle, vivos ou mortos."
                  },
                  {
                    "id": "q1528a90-34r1-87ad-112p-28skd029845f",
                    "name": "Avengers: Endgame",
                    "year": 2019,
                    "duration": 182,
                    "direction": "Anthony Russo, Joe Russo",
                    "description": "Após Thanos eliminar metade das criaturas vivas, os Vingadores têm de lidar com a perda de amigos e entes queridos. Com Tony Stark vagando perdido no espaço sem água e comida, Steve Rogers e Natasha Romanov lideram a resistência contra o titã louco."
                  },
                  {
                    "id": "1127f3f2-0057-4d67-b68a-a689c3447331",
                    "name": "Parasite",
                    "year": 2019,
                    "duration": 132,
                    "direction": "Bong Joon-ho",
                    "description": "Toda a família de Ki-taek está desempregada, vivendo em um porão sujo e apertado. Por obra do acaso, ele começa a dar aulas de inglês para uma garota de família rica. Fascinados com a vida luxuosa destas pessoas, pai, mãe e filhos bolam um plano para se infiltrar também na abastada família, um a um. No entanto, os segredos e mentiras necessários à ascensão social cobram o seu preço."
                  },
                  "..."
                ]
              }
            }
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/movies/{ movieId }": {
      "get": {
        "tags": ["Movies"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Listagem de um filme específico",
        "description": "Método responsável pela localização de um filme específico. Todos os usuários, admnistradores ou não, tem acesso a essa rota",
        "parameters": [
          {
            "name": "movieId",
            "in": "path",
            "description": "[`UUID`](https://developer.mozilla.org/en-US/docs/Glossary/UUID) do filme específico a ser listado",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**OK:** Listagem de todos os filmes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMovieResponse"
                },
                "example": {
                  "id": "q1528a90-34r1-87ad-112p-28skd029845f",
                  "name": "Avengers: Endgame",
                  "year": 2019,
                  "duration": 182,
                  "direction": "Anthony Russo, Joe Russo",
                  "description": "Após Thanos eliminar metade das criaturas vivas, os Vingadores têm de lidar com a perda de amigos e entes queridos. Com Tony Stark vagando perdido no espaço sem água e comida, Steve Rogers e Natasha Romanov lideram a resistência contra o titã louco."
                }
              }
            }
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**NOT FOUND:** Filme não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Movie not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Movies"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Remoção de um filme do catálogo",
        "description": "Este método será responsável pela remoção de um filme específico do catálogo. Rota restringida ao acesso apenas de usuários que são administradores",
        "parameters": [
          {
            "name": "movieId",
            "in": "path",
            "description": "[`UUID`](https://developer.mozilla.org/en-US/docs/Glossary/UUID) do usuário a ser listado",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "**NO CONTENT:** Filme excluído com sucesso!"
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**FORBIDDEN:**: Permissões de administrador ausentes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User is not the admin"
                }
              }
            }
          },
          "404": {
            "description": "**NOT FOUND:** Filme não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Movie not found"
                }
              }
            }
          }
        }
      }
    },
    "/movies/{ movieId }/ratings": {
      "post": {
        "tags": ["Movies"],
        "security": [{ "bearerToken": [] }],
        "summary": "Criar uma avaliação sobre um filme",
        "description": "Método responsável pela criação de uma avaliação. Todos os tipos de usuários podem acessar esta rota. O usuário logado apenas poderá enviar uma única avaliação com o seu id de usuário, sendo administrador ou não. Rota privada, onde um token de autenticação de usuário é solicitado",
        "parameters": [
          {
            "name": "movieId",
            "in": "path",
            "description": "[`UUID`](https://developer.mozilla.org/en-US/docs/Glossary/UUID) do filme a ser editado",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Todos os campos do exemplo são obrigatórios. O campo `rate` deverá receber um valor numérico inteiro entre 1 e 5",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMovieRating"
              },
              "examples": {
                "Padrão": {
                  "value": {
                    "rate": 5,
                    "comment": "Filme simplesmente incrível, indico a todos com certeza!",
                    "userId": "1127f3f2-0057-4d67-b68a-a689c3447331"
                  }
                },
                "Valor de 'rate' inválido": {
                  "value": {
                    "rate": 6,
                    "comment": "Filme simplesmente incrível, indico a todos com certeza!",
                    "userId": "1127f3f2-0057-4d67-b68a-a689c3447331"
                  }
                },
                "Argumentos ausentes": {
                  "value": {
                    "rate": 5,
                    "comment": "Filme simplesmente incrível, indico a todos com certeza!"
                  }
                },
                "Argumentos Inválidos": {
                  "value": {
                    "InvalidArg": null,
                    "rate": 5,
                    "comment": "Filme simplesmente incrível, indico a todos com certeza!",
                    "userId": "1127f3f2-0057-4d67-b68a-a689c3447331"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**CREATED:** Avaliação enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovieRating"
                },
                "example": {
                  "id": "c4181302-b2d7-495b-bc70-ada2d110acbf",
                  "rate": 5,
                  "comment": "Filme simplesmente incrível, indico a todos com certeza!",
                  "user": {
                    "id": "1127f3f2-0057-4d67-b68a-a689c3447331",
                    "name": "Francisco Stenico",
                    "email": "francisco@teste.com"
                  },
                  "movie": {
                    "id": "q1528a90-34r1-87ad-112p-28skd029845f",
                    "name": "Avengers: Endgame",
                    "year": 2019,
                    "duration": 182,
                    "direction": "Anthony Russo, Joe Russo",
                    "description": "Após Thanos eliminar metade das criaturas vivas, os Vingadores têm de lidar com a perda de amigos e entes queridos. Com Tony Stark vagando perdido no espaço sem água e comida, Steve Rogers e Natasha Romanov lideram a resistência contra o titã louco."
                  }
                }
              }
            }
          },
          "400": {
            "description": "**BAD REQUEST:** Erro com o corpo de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Valor de 'rate' inválido": {
                    "value": {
                      "message": "Value of argument 'rate' must be an integer between 1 and 5"
                    }
                  },
                  "Argumentos ausentes": {
                    "value": {
                      "message": "name is a required field"
                    }
                  },
                  "Argumentos inválidos": {
                    "value": {
                      "message": "this field has unspecified keys: InvalidArg"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**FORBIDDEN:**: O usuário já enviou uma avaliação sobre este filme",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "This user has already submitted a rating about this movie"
                }
              }
            }
          },
          "404": {
            "description": "**NOT FOUND:** usuário ou filme não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Usuário não encontrado": {
                    "value": {
                      "message": "User not found"
                    }
                  },
                  "Filme não encontrado": {
                    "value": {
                      "message": "Movie not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratings/movies": {
      "get": {
        "tags": ["Ratings"],
        "security": [{ "bearerToken": [] }],
        "summary": "Listagem de todas as avaliações sobre filmes do catálogo",
        "description": "Método responsável pela listagem de todas as avaliações feitas sobre os filmes do catálogo. A rota necessita de um token de autorização e pode ser acessada por qualquer usuário",
        "responses": {
          "200": {
            "description": "**OK:** Listagem das avaliações sobre filmes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovieRatingList"
                },
                "example": [
                  {
                    "id": "c4181302-b2d7-495b-bc70-ada2d110acbf",
                    "rate": 5,
                    "comment": "Filme simplesmente incrível, indico a todos com certeza!",
                    "user": {
                      "id": "1127f3f2-0057-4d67-b68a-a689c3447331",
                      "name": "Francisco Stenico",
                      "email": "francisco@teste.com"
                    },
                    "movie": {
                      "id": "q1528a90-34r1-87ad-112p-28skd029845f",
                      "name": "Avengers: Endgame",
                      "year": 2019,
                      "duration": 182,
                      "direction": "Anthony Russo, Joe Russo",
                      "description": "Após Thanos eliminar metade das criaturas vivas, os Vingadores têm de lidar com a perda de amigos e entes queridos. Com Tony Stark vagando perdido no espaço sem água e comida, Steve Rogers e Natasha Romanov lideram a resistência contra o titã louco."
                    }
                  },
                  {
                    "id": "e0150833-89fc-436c-aa10-d2a68b0fa32f",
                    "rate": 2,
                    "comment": "Deixou a desejar em muitos pontos e me deu sono na maioria do tempo",
                    "user": {
                      "id": "q1528a90-34r1-87ad-112p-28skd029845f",
                      "name": "Maykel Nekel",
                      "email": "maykel@teste.com"
                    },
                    "movie": {
                      "id": "q1528a90-34r1-87ad-112p-28skd029845f",
                      "name": "Avengers: Endgame",
                      "year": 2019,
                      "duration": 182,
                      "direction": "Anthony Russo, Joe Russo",
                      "description": "Após Thanos eliminar metade das criaturas vivas, os Vingadores têm de lidar com a perda de amigos e entes queridos. Com Tony Stark vagando perdido no espaço sem água e comida, Steve Rogers e Natasha Romanov lideram a resistência contra o titã louco."
                    }
                  },
                  "..."
                ]
              }
            }
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratings/series": {
      "get": {
        "tags": ["Ratings"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Listagem de todas as avaliações sobre séries do catálogo",
        "description": "Método responsável pela listagem de todas as avaliações feitas sobre as séries presentes no catálogo. A rota necessita de um token de autorização e pode ser acessada por qualquer usuário"
      }
    },
    "/ratings/{ movieId }/{ userId }": {
      "delete": {
        "tags": ["Ratings"],
        "security": [{ "bearerToken": [] }],
        "summary": "Deleção de uma avaliação sobre um filme",
        "description": "Deleção de uma avaliação sobre um filme. Pode ser acessado para deleção pelo próprio dono da avaliação, ou até mesmo avaliações feitas por terceiros, caso o usuário logado seja um administrador, visando o controle de linguagem imprópria ou afins",
        "parameters": [
          {
            "name": "movieId",
            "in": "path",
            "description": "[`UUID`](https://developer.mozilla.org/en-US/docs/Glossary/UUID) do filme a ser editado",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "[`UUID`](https://developer.mozilla.org/en-US/docs/Glossary/UUID) do usuário a ser editado",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "**NO CONTENT:** Avaliação excluída com sucesso!"
          },
          "401": {
            "description": "**UNAUTHORIZED:** Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Token Ausente": {
                    "value": {
                      "message": "Missing Authorization headers"
                    }
                  },
                  "Token Inválido": {
                    "value": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**NOT FOUND:** usuário ou filme não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Usuário não encontrado": {
                    "value": {
                      "message": "User not found"
                    }
                  },
                  "Filme não encontrado": {
                    "value": {
                      "message": "Movie not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "createUserRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string", "format": "password" },
          "isAdm": { "type": "boolean" },
          "paymentMethods": {
            "name": { "type": "string" },
            "cpf": { "type": "string" },
            "number": { "type": "string" },
            "dueDate": { "type": "string", "format": "date" },
            "code": { "type": "string" }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "isAdm": { "type": "boolean" },
          "paymentMethods": {
            "id": { "type": "string", "format": "uuid" },
            "name": { "type": "string" },
            "cpf": { "type": "string" },
            "number": { "type": "string" },
            "dueDate": { "type": "string", "format": "date" },
            "code": { "type": "string" }
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "SummaryProfile": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "email": { "type": "string" }
        }
      },
      "UserList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "updateUserRequest1": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string", "format": "password" },
          "paymentMethods": {
            "name": { "type": "string" },
            "cpf": { "type": "string" },
            "number": { "type": "string" },
            "dueDate": { "type": "string", "format": "date" },
            "code": { "type": "string" }
          }
        }
      },
      "updateUserRequest2": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string", "format": "password" }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string", "format": "password" }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": { "type": "string" }
        }
      },
      "CreateMovieRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "year": { "type": "integer" },
          "duration": { "type": "integer" },
          "description": { "type": "string" },
          "direction": { "type": "string" }
        }
      },
      "CreateMovieResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "year": { "type": "integer" },
          "duration": { "type": "integer" },
          "description": { "type": "string" },
          "direction": { "type": "string" }
        }
      },
      "MoviesList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CreateMovieResponse"
        }
      },
      "CreateMovieRating": {
        "type": "object",
        "properties": {
          "rate": { "type": "integer" },
          "comment": { "type": "string" },
          "userId": { "type": "string", "format": "uuid" }
        }
      },
      "MovieRating": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "rate": { "type": "integer" },
          "comment": { "type": "string" },
          "user": {
            "$ref": "#/components/schemas/SummaryProfile"
          },
          "movie": {
            "$ref": "#/components/schemas/CreateMovieResponse"
          }
        }
      },
      "MovieRatingList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MovieRating"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
